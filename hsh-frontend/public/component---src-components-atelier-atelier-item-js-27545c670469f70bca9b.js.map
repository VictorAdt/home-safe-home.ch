{"version":3,"sources":["webpack:///./src/components/footer.js","webpack:///./src/components/header/nav.js","webpack:///./src/components/header/logo.js","webpack:///./src/components/header/header.js","webpack:///./src/components/ruban.js","webpack:///./src/components/layout.js","webpack:///./src/components/atelier/atelier-item.js"],"names":["Footer","content","useStaticQuery","allStrapiFooter","nodes","className","contact","acces","Social","map","e","i","key","target","href","lien","nom","Nav","current","window","location","pathname","to","style","color","Logo","Header","siteTitle","defaultProps","Ruban","data","console","log","class","allStrapiRuban","edges","node","texte","Layout","children","site","siteMetadata","title","AtelierItem","atelier","strapiAtelier","titre","description","state","query"],"mappings":"gIAuCeA,EApCA,WACX,IAcMC,EAdOC,yBAAe,cAcPC,gBAAgBC,MAAM,GAC3C,OACI,gCACI,yBAAKC,UAAU,mBACX,uBAAGA,UAAU,SAAb,WACA,2BAAIJ,EAAQK,UAEhB,yBAAKD,UAAU,iBACX,uBAAGA,UAAU,SAAb,SACCJ,EAAQM,OAEb,yBAAKF,UAAU,kBACX,uBAAGA,UAAU,SAAb,UACCJ,EAAQO,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OAChB,uBAAGC,IAAKD,EAAGE,OAAO,SAASC,KAAMJ,EAAEK,MAAnC,IAA2CL,EAAEM,WCflDC,EAdH,WACR,IAAMC,EAAUC,OAAOC,SAASC,SAChC,OACI,6BACI,kBAAC,OAAD,CAAMC,GAAG,IAAIC,MAAO,CAACC,MAAmB,MAAZN,EAAkB,OAAS,SAAvD,UACA,kBAAC,OAAD,CAAMI,GAAG,WAAWC,MAAO,CAACC,MAAmB,aAAZN,EAAyB,OAAS,SAArE,cACA,kBAAC,OAAD,CAAMI,GAAG,eAAeC,MAAO,CAACC,MAAmB,iBAAZN,EAA6B,OAAS,SAA7E,iBACA,kBAAC,OAAD,CAAMI,GAAG,cAAcC,MAAO,CAACC,MAAmB,gBAAZN,EAA4B,OAAS,SAA3E,gBACA,kBAAC,OAAD,CAAMI,GAAG,UAAUC,MAAO,CAACC,MAAmB,YAAZN,EAAwB,OAAS,SAAnE,YACA,kBAAC,OAAD,CAAMI,GAAG,WAAWC,MAAO,CAACC,MAAmB,aAAZN,EAAyB,OAAS,SAArE,eCJGO,EANF,WACT,OACI,oCCCFC,EAAS,SAAC,GAAD,EAAGC,UAAH,OACb,gCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QAQJD,EAAOE,aAAe,CACpBD,UAAU,IAGGD,QCKAG,G,UAtBD,WAEV,IAAMC,EAAO5B,yBAAe,aAe5B,OADA6B,QAAQC,IAAIF,GAEJ,uBAAGG,MAAM,WAAU,8BAAOH,EAAKI,eAAeC,MAAM,GAAGC,KAAKC,UCmBzDC,IAzBA,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACVT,EAAO5B,yBAAe,cAU5B,OACE,yBAAK+B,MAAM,WACT,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQN,WAAW,UAAAG,EAAKU,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,8BAAOH,GACP,kBAAC,EAAD,S,kCC/BN,8FAiBeI,UAbK,SAAC,GAAc,IACzBC,EADwB,EAAXd,KACEe,cACrB,OACI,kBAAC,IAAD,KACI,yBAAKxC,UAAU,iBACX,2BAAIuC,EAAQE,OACZ,2BAAIF,EAAQG,cAEhB,kBAAC,OAAD,CAAMzB,GAAG,gBAAgB0B,MAAO,CAACJ,QAASA,IAA1C,gBAOL,IAAMK,EAAK,c","file":"component---src-components-atelier-atelier-item-js-27545c670469f70bca9b.js","sourcesContent":["import React from 'react';\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Footer = () => {\r\n    const data = useStaticQuery(graphql`\r\n        query FooterQuery {\r\n            allStrapiFooter {\r\n                nodes {\r\n                acces\r\n                contact\r\n                Social {\r\n                    lien\r\n                    nom\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const content = data.allStrapiFooter.nodes[0]\r\n    return (\r\n        <footer>\r\n            <div className=\"footer__contact\">\r\n                <p className=\"title\">contact</p>\r\n                <p>{content.contact}</p>\r\n            </div>\r\n            <div className=\"footer__acces\">\r\n                <p className=\"title\">acces</p>\r\n                {content.acces}\r\n            </div>\r\n            <div className=\"footer__social\">\r\n                <p className=\"title\">social</p>\r\n                {content.Social.map((e, i) => (\r\n                    <a key={i} target=\"_blank\" href={e.lien}> {e.nom}</a>\r\n                ))}\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Link} from 'gatsby'\r\n\r\nconst Nav = () => {\r\n    const current = window.location.pathname\r\n    return (\r\n        <nav>\r\n            <Link to=\"/\" style={{color: current === '/' ? '#fff' : '#000'}}> home </Link>\r\n            <Link to=\"/atelier\" style={{color: current === '/atelier' ? '#fff' : '#000'}}> ateliers </Link>\r\n            <Link to=\"/philosophie\" style={{color: current === '/philosophie' ? '#fff' : '#000'}}> philosophie </Link>\r\n            <Link to=\"/consulting\" style={{color: current === '/consulting' ? '#fff' : '#000'}}> consulting </Link>\r\n            <Link to=\"/equipe\" style={{color: current === '/equipe' ? '#fff' : '#000'}}> Ã©quipe </Link>\r\n            <Link to=\"/contact\" style={{color: current === '/contact' ? '#fff' : '#000'}}> contact </Link>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <p>logo</p>\r\n    );\r\n};\r\n\r\nexport default Logo;","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Nav from './nav'\r\nimport Logo from './logo'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header>\r\n    <Logo/>\r\n    <Nav/>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Ruban = () => {\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query RubanQuery {\r\n        allStrapiRuban {\r\n          edges {\r\n            node {\r\n              texte\r\n              strapiId\r\n              id\r\n            }\r\n          }\r\n        }\r\n   }\r\n  `)\r\n\r\n    console.log(data);\r\n    return (\r\n            <p class=\"marquee\"><span>{data.allStrapiRuban.edges[0].node.texte}</span></p>\r\n    );\r\n};\r\n\r\nexport default Ruban;\r\n\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Footer from './footer'\r\nimport Header from \"./header/header\"\r\nimport './styles.scss'\r\nimport Ruban from \"./ruban\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <div class=\"content\">\r\n      <Ruban/>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <main>{children}</main>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\r\nimport { Link } from 'gatsby'\r\nimport Layout from '../layout';\r\n\r\nconst AtelierItem = ({ data }) => {\r\n    const atelier = data.strapiAtelier\r\n    return (\r\n        <Layout>\r\n            <div className=\"atelier__item\">\r\n                <p>{atelier.titre}</p>\r\n                <p>{atelier.description}</p>\r\n            </div>\r\n            <Link to=\"/subscription\" state={{atelier: atelier}}>S'inscrire</Link>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AtelierItem;\r\n\r\nexport const query = graphql`\r\n  query AtelierItem($slug: String!) {\r\n    strapiAtelier(id: {eq: $slug}) {\r\n        Date(formatString: \"DD MM YY\")\r\n        type\r\n        titre\r\n        description\r\n        infos\r\n        id\r\n    }\r\n  }\r\n`"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/form/contact-form.js","webpack:///./src/pages/contact.js"],"names":["ContactForm","useState","message","setMessage","filed","setFiled","nom","prenom","email","telephone","contact","setContact","handleChange","e","a","target","name","value","useEffect","console","log","handleSubmit","preventDefault","window","scrollTo","top","behavior","data","axios","method","url","contactRes","status","setTimeout","location","pathname","response","label","type","className","onChange","style","cursor","pointerEvents","backgroundColor","onClick","Contact","title","lang","description"],"mappings":"wNAuIeA,EAlIK,WAAO,IAAD,EACQC,mBAAS,MAAhCC,EADe,KACNC,EADM,OAEIF,oBAAS,GAA5BG,EAFe,KAERC,EAFQ,OAGQJ,mBAAS,CACnCK,IAAK,GACLC,OAAQ,GACRC,MAAO,GACPC,UAAW,GACXP,QAAS,KALNQ,EAHe,KAGNC,EAHM,KAWhBC,EAAY,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACXH,EAAW,OAAD,UAAMD,IAAN,MAAgBG,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,MAAzC,KADC,UAGG,KAAhBP,EAAQJ,KACc,KAAnBI,EAAQH,QACU,KAAlBG,EAAQF,OACY,KAApBE,EAAQR,SACc,KAAtBQ,EAAQD,UAPE,gCASPJ,GAAS,GATF,6BAWbA,GAAS,GAXI,2CAAH,sDAelBa,qBAAU,WACNC,QAAQC,IAAIV,KACb,CAACA,IAEJ,IAAMW,EAAY,uCAAG,WAAMR,GAAN,iBAAAC,EAAA,yDACjBD,EAAES,iBAEkB,KAAhBZ,EAAQJ,KACW,KAAnBI,EAAQH,QACU,KAAlBG,EAAQF,OACc,KAAtBE,EAAQD,WACY,KAApBC,EAAQR,QAPK,uBASbqB,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,WACpCvB,EAAW,oCAVE,iCAcboB,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,WACpCvB,EAAW,oBACLwB,EAAO,CACTrB,IAAKI,EAAQJ,IACbC,OAAQG,EAAQH,OAChBC,MAAyB,KAAlBE,EAAQF,MAAe,OAASE,EAAQF,MAC/CC,UAAWC,EAAQD,UACnBP,QAASQ,EAAQR,SArBR,oBAwBgB0B,IAAM,CAC3BC,OAAQ,OACRC,IAAK,gCACLH,SA3BK,WAwBHI,EAxBG,OA6BTZ,QAAQC,IAAIW,GACc,MAAtBA,EAAWC,OA9BN,wBA+BL7B,EAAW,kBACX8B,YAAW,WACPV,OAAOW,SAASC,SAAW,MAC5B,KAlCE,2BAqCThB,QAAQC,IAAIlB,GArCH,mDAuCTiB,QAAQC,IAAI,KAAEgB,SAASJ,QACG,MAAtB,KAAEI,SAASJ,OACX7B,EAAW,2BACkB,MAAtB,KAAEiC,SAASJ,QAClB7B,EAAW,qEA3CN,2DAAH,sDAiDlB,OACI,oCACI,kBAAC,IAAD,CACID,QAASA,IAEb,8BACI,kBAAC,IAAD,CACIU,aAAcA,EACdI,KAAM,MACNqB,MAAO,MACPC,KAAM,SAEV,kBAAC,IAAD,CACI1B,aAAcA,EACdI,KAAM,SACNqB,MAAO,SACPC,KAAM,SAEV,kBAAC,IAAD,CACI1B,aAAcA,EACdI,KAAM,QACNqB,MAAO,QACPC,KAAM,UAEV,kBAAC,IAAD,CACI1B,aAAcA,EACdI,KAAM,YACNqB,MAAO,YACPC,KAAM,WAEV,yBAAKC,UAAU,kCACX,0CACA,8BAAUvB,KAAK,UAAUwB,SAAU5B,KAEvC,yBACI6B,MAAO,CACHC,OAAQtC,EAAQ,UAAY,gBAGhC,4BACIqC,MAAO,CACHE,cAAevC,EAAQ,GAAK,OAC5BwC,gBAAiBxC,EAAQ,UAAY,WAEzCyC,QAASxB,GALb,e,wBCtGLyB,UAhBC,WACZ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,MAAM,UACNC,KAAK,KACLC,YAAY,oBAEhB,yBAAKV,UAAU,gBACX,uCACA,kBAAC,EAAD","file":"component---src-pages-contact-js-04c290d96ab38eeb2b24.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Input from './input';\r\nimport axios from 'axios'\r\nimport ResponseMessage from './response-message';\r\n\r\nconst ContactForm = () => {\r\n    const [message, setMessage] = useState(null)\r\n    const [filed, setFiled] = useState(false)\r\n    const [contact, setContact] = useState({\r\n        nom: '',\r\n        prenom: '',\r\n        email: '',\r\n        telephone: '',\r\n        message: '',\r\n    });\r\n\r\n    const handleChange = async e => {\r\n        await setContact({ ...contact, [e.target.name]: e.target.value })\r\n        if (\r\n            contact.nom !== ''\r\n            && contact.prenom !== ''\r\n            && contact.email !== ''\r\n            && contact.message !== ''\r\n            && contact.telephone !== ''\r\n        ) {\r\n            await setFiled(true)\r\n        } else {\r\n            setFiled(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(contact);\r\n    }, [contact]);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        if (contact.nom === \"\" ||\r\n            contact.prenom === \"\" ||\r\n            contact.email === \"\" ||\r\n            contact.telephone === \"\" ||\r\n            contact.message === \"\"\r\n        ) {\r\n            window.scrollTo({ top: 0, behavior: 'smooth' })\r\n            setMessage('Merci de remplir tous les champs')\r\n            return\r\n        }\r\n        else {\r\n            window.scrollTo({ top: 0, behavior: 'smooth' })\r\n            setMessage('Envoi du message')\r\n            const data = {\r\n                nom: contact.nom,\r\n                prenom: contact.prenom,\r\n                email: contact.email === \"\" ? 'null' : contact.email,\r\n                telephone: contact.telephone,\r\n                message: contact.message\r\n            }\r\n            try {\r\n                const contactRes = await axios({\r\n                    method: 'POST',\r\n                    url: 'http://45.66.223.134/contacts',\r\n                    data,\r\n                })\r\n                console.log(contactRes);\r\n                if (contactRes.status === 200) {\r\n                    setMessage('Message envoyé')\r\n                    setTimeout(() => {\r\n                        window.location.pathname = '/'\r\n                    }, 500)\r\n                    return\r\n                }\r\n                console.log(message);\r\n            } catch (e) {\r\n                console.log(e.response.status);\r\n                if (e.response.status === 500) {\r\n                    setMessage('Une erreur est survenue')\r\n                } else if (e.response.status === 400) {\r\n                    setMessage(`Merci d'entrer un numéro de téléphone et une adresse email valide`)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ResponseMessage\r\n                message={message}\r\n            />\r\n            <form>\r\n                <Input\r\n                    handleChange={handleChange}\r\n                    name={'nom'}\r\n                    label={'Nom'}\r\n                    type={'text'}\r\n                />\r\n                <Input\r\n                    handleChange={handleChange}\r\n                    name={'prenom'}\r\n                    label={'Prenom'}\r\n                    type={'text'}\r\n                />\r\n                <Input\r\n                    handleChange={handleChange}\r\n                    name={'email'}\r\n                    label={'email'}\r\n                    type={'email'}\r\n                />\r\n                <Input\r\n                    handleChange={handleChange}\r\n                    name={'telephone'}\r\n                    label={'Telephone'}\r\n                    type={'number'}\r\n                />\r\n                <div className=\"contactform__message__textarea\">\r\n                    <label>Message</label>\r\n                    <textarea name=\"message\" onChange={handleChange} />\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        cursor: filed ? 'pointer' : 'not-allowed',\r\n                    }}\r\n                >\r\n                    <button\r\n                        style={{\r\n                            pointerEvents: filed ? '' : 'none',\r\n                            backgroundColor: filed ? '#e7205b' : '#c8c8c8'\r\n                        }}\r\n                        onClick={handleSubmit}>Envoyer</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport ContactForm from '../components/form/contact-form';\r\nimport Layout from \"../components/layout\"\r\nimport SEO from './../components/seo'\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <Layout>\r\n            <SEO\r\n                title=\"Contact\"\r\n                lang=\"fr\"\r\n                description=\"Page de contact\"\r\n            />\r\n            <div className=\"page contact\">\r\n                <h1>Contact</h1>\r\n                <ContactForm />\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Contact;"],"sourceRoot":""}
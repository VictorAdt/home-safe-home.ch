{"version":3,"sources":["webpack:///./src/pages/atelier.js","webpack:///./src/components/atelier/atelier-card.js"],"names":["Atelier","data","pageContent","allStrapiPageAtelier","edges","node","title","titre","description","atelier","map","e","i","pageQuery","AtelierCard","props","useState","hover","setHover","handleHover","styles","open","maxHeight","window","location","pathname","opacity","transition","color","subbutton","backgroundColor","morebutton","className","onMouseEnter","onMouseLeave","Date","split","type","style","description_courte","to","id","state"],"mappings":"6FAAA,8GAuBeA,UAlBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACVC,EAAcD,EAAKE,qBAAqBC,MAAM,GAAGC,KACvD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,YACX,4BAAKJ,EAAYK,OACjB,2BAAIL,EAAYM,aAEdP,EAAKQ,QAAQL,MAAMM,KAAI,SAACC,EAAGC,GAAJ,OACrB,kBAAC,IAAD,CACEH,QAASE,EAAEN,YAUhB,IAAMQ,EAAS,c,oCCzBtB,iDAsDeC,IAlDK,SAAAC,GAAU,IAAD,EACCC,oBAAS,GAA5BC,EADkB,KACXC,EADW,KAGnBC,EAAc,WAChBD,GAAUD,IAGRG,EAAS,CACXC,KAAM,CACFC,UAAWL,GAAgD,kBAA7BM,SAAOC,SAASC,SAA3B,SAAqE,EACxFC,QAAST,GAAyC,kBAA7BM,SAAOC,SAASC,SAApB,EAAuD,EACxEE,WAAY,aAEhBC,MAAO,CACHA,MAAOX,EAAQ,UAAY,IAE/BY,UAAW,CACPC,gBAAiBb,EAAQ,UAAY,IAEzCc,WAAY,CACRD,gBAAiBb,EAAQ,OAAS,KAI1C,OACI,yBAAKe,UAAU,wBAAwBC,aAAcd,EAAae,aAAcf,GAC5E,yBAAKa,UAAU,0BACX,6BACKjB,EAAMN,QAAQ0B,KAAKC,MAAM,KAAK1B,KAAI,SAACC,EAAGC,GAAJ,OAC/B,uBAAGoB,UAAS,0BAA4BpB,GAAOD,OAGvD,yBAAKqB,UAAU,8BACX,uBAAGA,UAAU,sBAAb,IAAoCjB,EAAMN,QAAQ4B,MAClD,uBAAGL,UAAU,uBAAwBM,MAAOlB,EAAOQ,OAAnD,IAA4Db,EAAMN,QAAQF,OAC1E,uBAAGyB,UAAU,uBAAuBM,MAAOlB,EAAOC,MAAON,EAAMN,QAAQ8B,sBAGjD,kBAA7BhB,SAAOC,SAASC,UACb,yBAAMO,UAAU,0BACZ,kBAAC,OAAD,CAAMQ,GAAE,YAAczB,EAAMN,QAAQgC,GAAMH,MAAOlB,EAAOW,YAAxD,YAEA,kBAAC,OAAD,CAAMS,GAAE,gBAAmBE,MAAO,CAAEjC,QAASM,EAAMN,SAAW6B,MAAOlB,EAAOS,WAA5E","file":"component---src-pages-atelier-js-5d9225a499a1c5ff7b3d.js","sourcesContent":["import React from 'react';\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport AtelierCard from './../components/atelier/atelier-card'\r\n\r\nconst Atelier = ({data}) => {\r\n  const pageContent = data.allStrapiPageAtelier.edges[0].node\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Atelier\" />\r\n      <h1>{pageContent.titre}</h1>\r\n      <p>{pageContent.description}</p>\r\n      {\r\n        data.atelier.edges.map((e, i) => (\r\n          <AtelierCard\r\n            atelier={e.node}\r\n          />\r\n        ))\r\n      }\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Atelier;\r\n\r\nexport const pageQuery = graphql`\r\n  query AtelierPageQuery {\r\n    allStrapiPageAtelier {\r\n      edges {\r\n        node {\r\n          titre\r\n          strapiId\r\n          id\r\n          description\r\n        }\r\n      }\r\n    }\r\n    atelier: allStrapiAtelier {\r\n      edges {\r\n        node {\r\n          strapiId\r\n          id\r\n          titre\r\n          type\r\n          description\r\n          description_courte\r\n          Date(formatString: \"DD MM YY\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React, { useState } from 'react';\r\nimport { Link } from 'gatsby'\r\nimport { window } from 'browser-monads';\r\n\r\nconst AtelierCard = props => {\r\n    const [hover, setHover] = useState(false)\r\n\r\n    const handleHover = () => {\r\n        setHover(!hover)\r\n    }\r\n\r\n    const styles = {\r\n        open: {\r\n            maxHeight: hover ? '1000px' : window.location.pathname === '/subscription' ? '1000px' : 0,\r\n            opacity: hover ? 1 : window.location.pathname === '/subscription' ? 1 : 0,\r\n            transition: '500ms all'\r\n        },\r\n        color: {\r\n            color: hover ? '#e7205b' : ''\r\n        },\r\n        subbutton: {\r\n            backgroundColor: hover ? '#e7205b' : ''\r\n        },\r\n        morebutton: {\r\n            backgroundColor: hover ? '#000' : ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"atelier__card atelier\" onMouseEnter={handleHover} onMouseLeave={handleHover}>\r\n            <div className=\"atelier__card__content\">\r\n                <div>\r\n                    {props.atelier.Date.split(' ').map((e, i) => (\r\n                        <p className={`atelier__date date date${i}`} >{e}</p>\r\n                    ))}\r\n                </div>\r\n                <div className=\"atelier__card__mainContent\">\r\n                    <p className=\"atelier__type type\"> {props.atelier.type}</p>\r\n                    <p className=\"atelier__title title\"  style={styles.color}> {props.atelier.titre}</p>\r\n                    <p className=\"atelier__description\" style={styles.open}>{props.atelier.description_courte}</p>\r\n                </div>\r\n            </div>\r\n            {window.location.pathname !== '/subscription' &&\r\n                <div  className=\"atelier__card__buttons\">\r\n                    <Link to={`/atelier/${props.atelier.id}`} style={styles.morebutton}> DÃ©tails\r\n                    </Link>\r\n                    <Link to={`/subscription`} state={{ atelier: props.atelier }} style={styles.subbutton}> S'inscrire\r\n                    </Link>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AtelierCard;\r\n"],"sourceRoot":""}